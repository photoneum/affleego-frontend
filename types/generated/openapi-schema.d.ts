/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/v1/auth/login": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Takes a set of user credentials and returns an access and refresh JSON web
     *     token pair to prove the authentication of those credentials. */
    post: operations["auth_login_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/auth/onboarding": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * User Onboarding
     * @description Complete user onboarding process
     */
    post: operations["auth_onboarding_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/auth/password-reset": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Request Password Reset
     * @description Request password reset email
     */
    post: operations["auth_password_reset_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/auth/password-reset/confirm": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Reset Password
     * @description Reset password with new password
     */
    post: operations["auth_password_reset_confirm_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/auth/register": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * User Registration
     * @description Register a new user account
     */
    post: operations["auth_register_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/auth/resend-verification-code": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Resend Verification Code
     * @description Resend verification code
     */
    post: operations["auth_resend_verification_code_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/auth/verify": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Verify User Email
     * @description Verify user email with verification code
     */
    post: operations["auth_verify_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    CustomTokenObtainPairRequest: {
      email: string;
      password: string;
    };
    PasswordResetConfirmRequest: {
      /** Format: email */
      email: string;
      code: string;
      password: string;
    };
    PasswordResetRequestRequest: {
      /** Format: email */
      email: string;
    };
    ResendVerificationCodeRequest: {
      /** Format: email */
      email: string;
    };
    UserOnboarding: {
      brand_name: string;
      /** Format: uri */
      website?: string;
      marketing_methods?: string[];
      heard_from: string;
      feedback_message?: string;
    };
    UserOnboardingRequest: {
      brand_name: string;
      /** Format: uri */
      website?: string;
      marketing_methods?: string[];
      heard_from: string;
      feedback_message?: string;
    };
    UserRegistration: {
      /**
       * Email address
       * Format: email
       */
      email: string;
      first_name: string;
      last_name: string;
      phone_number?: string;
    };
    UserRegistrationRequest: {
      /**
       * Email address
       * Format: email
       */
      email: string;
      password: string;
      first_name: string;
      last_name: string;
      phone_number?: string;
    };
    /** @description Serializer for email verification. */
    VerificationRequest: {
      /** Format: email */
      email: string;
      code: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  auth_login_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CustomTokenObtainPairRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["CustomTokenObtainPairRequest"];
        "multipart/form-data": components["schemas"]["CustomTokenObtainPairRequest"];
      };
    };
    responses: {
      /** @description No response body */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  auth_onboarding_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserOnboardingRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["UserOnboardingRequest"];
        "multipart/form-data": components["schemas"]["UserOnboardingRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UserOnboarding"];
        };
      };
    };
  };
  auth_password_reset_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PasswordResetRequestRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PasswordResetRequestRequest"];
        "multipart/form-data": components["schemas"]["PasswordResetRequestRequest"];
      };
    };
    responses: {
      /** @description No response body */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  auth_password_reset_confirm_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PasswordResetConfirmRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PasswordResetConfirmRequest"];
        "multipart/form-data": components["schemas"]["PasswordResetConfirmRequest"];
      };
    };
    responses: {
      /** @description No response body */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  auth_register_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserRegistrationRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["UserRegistrationRequest"];
        "multipart/form-data": components["schemas"]["UserRegistrationRequest"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UserRegistration"];
        };
      };
    };
  };
  auth_resend_verification_code_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ResendVerificationCodeRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["ResendVerificationCodeRequest"];
        "multipart/form-data": components["schemas"]["ResendVerificationCodeRequest"];
      };
    };
    responses: {
      /** @description No response body */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  auth_verify_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["VerificationRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["VerificationRequest"];
        "multipart/form-data": components["schemas"]["VerificationRequest"];
      };
    };
    responses: {
      /** @description No response body */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
}
