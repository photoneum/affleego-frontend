name: Deploy to Production Server

on:
  pull_request:
    branches:
      - main

  push:
    branches:
      - main

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Make build .env file
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_NEXT_PUBLIC_API_BASE_URL: "https://api.affleego.com/api/v1/"
          envkey_API_BASE_URL: "https://api.affleego.com/api/v1/"
          envkey_AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
          envkey_AUTH_TRUST_HOST: "true"
          file_name: .env.production
          fail_on_empty: true

      - name: Build
        run: yarn build

  deploy-job:
    runs-on: ubuntu-latest
    needs: test-build
    if: ${{ github.event_name == 'push' }} # will be fired if the trigger event is a push event.

    strategy:
      max-parallel: 4
      matrix:
        node-version: [20.17.0]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Make build .env file
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_NEXT_PUBLIC_API_BASE_URL: "https://api.affleego.com/api/v1/"
          envkey_API_BASE_URL: "https://api.affleego.com/api/v1/"
          envkey_AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
          envkey_AUTH_TRUST_HOST: "true"
          file_name: .env.production
          fail_on_empty: true

      - name: Build
        run: yarn build

      - name: Copy repository contents via scp to remote server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          source: "."
          target: "~/affleego-frontend"

      - name: Executing remote command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          command_timeout: 20m

          script: |
            pm2 restart affleego-frontend-app
